{"version":3,"sources":["api/socket.js","utils/list.js","stores/members.js","utils/animations.js","utils/defaultAvatar.js","components/pages/main.js","api/request.js","components/pages/input-member.js","components/shared-components/person.js","components/pages/gift-exchange.js","components/pages/welcome.js","utils/history.js","router.js","stores/index.js","App.js","serviceWorker.js","index.js"],"names":["socket","List","data","_this","this","Object","classCallCheck","array","hash","forEach","e","id","obj","index","findIndex","m","push","filter","fn","map","_this2","newData","assign","create","getPrototypeOf","apply","length","stores_members","action","bound","members","attend","payment","observable","computed","api_socket","connect","io","on","console","log","memberStore","setMembers","member","disconnect","close","emit","event","animations","animationCount","getAnimation","Math","floor","random","animation","defaultAvatar","name","concat","Main","inject","observer","setUIAvatar","target","src","props","react_default","a","createElement","className","key","image","alt","onError","React","Component","fetchAPI","url","fetch","then","r","json","catch","ex","sendFormData","body","method","arguments","undefined","headers","Accept","Authorization","localStorage","getItem","FormData","entries","Array","isArray","elem","append","titles","InputMember","possibleConstructorReturn","call","handleChange","newValue","actionMeta","Date","now","toString","setState","value","get","title","label","addMember","newMember","objectSpread","state","removeMember","onImageSelected","_ref","asyncToGenerator","regenerator_default","mark","_callee","files","file","res","wrap","_context","prev","next","sent","t0","stop","_x","changeImageMode","imageMode","countMember","countAttendMember","countPaymentMember","_this$state","options","Creatable_default","isClearable","onChange","placeholder","noOptionsMessagefunction","t","type","checked","onClick","accept","Person","react_animated_css_lib","isVisible","animationIn","animationOut","style","backgroundImage","defaultPerson","isDefault","GiftExchange","start","step","isDemo","window","location","pathname","toJS","getAPair","member1","member2","personCount","splice","getAPerson","group","groupEnd","setTimeout","text","Fragment","person","renderBtn","settings","centerMode","infinite","centerPadding","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","cssEase","Welcome","react_slick_lib_default","createBrowserHistory","MyRouter","Router","history","Switch","Route","path","component","render","Redirect","to","stores","configure","enforceActions","App","index_module","router","Boolean","hostname","match","root","document","getElementById","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33ee69e4.chunk.js","sourcesContent":["import io from 'socket.io-client';\nimport List from '../utils/list';\nimport memberStore from '../stores/members';\n\nconst SOCKET_SERVER = '/';\n// const SOCKET_SERVER = 'https://ono-checkin.herokuapp.com/';\n\nlet socket;\nconst connect = () => {\n  socket = io(SOCKET_SERVER);\n  socket.on('connect', () => {\n    socket.on('data', (data) => {\n      console.log(data);\n      memberStore.setMembers(new List(data));\n    });\n    socket.on('new-member', (member) => {\n      console.log('New member', member);\n    });\n  });\n};\n\nconst emit = (event, data) => {\n  socket.emit(event, data);\n};\n\nconst disconnect = () => {\n  socket.close();\n};\n\nexport default {\n  connect,\n  disconnect,\n  emit,\n};\n","class List {\n  constructor(data) {\n    this.array = data;\n    this.hash = {};\n    data.forEach((e) => {\n      this.hash[e.id] = e;\n    });\n  }\n\n  get length() {\n    return this.array.length;\n  }\n\n  get(id) {\n    return this.hash[id];\n  }\n\n  add(obj) {\n    const { id } = obj;\n    if (!this.hash[id]) {\n      this.array.push(obj);\n    } else {\n      const index = this.array.findIndex(m => m.id === id);\n      this.array[index] = obj;\n    }\n    this.hash[id] = obj;\n  }\n\n  remove(id) {\n    delete this.hash[id];\n    this.array = this.array.filter(e => e.id !== id);\n  }\n\n  map(fn) {\n    return this.array.map(fn);\n  }\n\n  apply(fn) {\n    const newData = this.array.map(e => fn(e));\n    this.array = newData;\n    newData.forEach((e) => {\n      this.hash[e.id] = e;\n    });\n  }\n\n  clone(fn) {\n    const obj = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n    obj.apply(fn);\n    return obj;\n  }\n}\n\nexport default List;\n","import { observable, computed, action } from 'mobx';\nimport List from '../utils/list';\n\nclass MemberStore {\n  @observable\n  members = new List([]);\n\n  @computed\n  get countMember() {\n    return this.members.length;\n  }\n\n  @computed\n  get countAttendMember() {\n    return this.members.array.filter(m => m.attend).length;\n  }\n\n  @computed\n  get countPaymentMember() {\n    return this.members.array.filter(m => m.payment).length;\n  }\n\n  @action.bound\n  setMembers(members) {\n    this.members = members;\n  }\n}\n\nexport default new MemberStore();\n","const animations = [\n  'bounce',\n  'flash',\n  'pulse',\n  'rubberBand',\n  'shake',\n  'headShake',\n  'swing',\n  'tada',\n  'wobble',\n  'jello',\n  'fadeIn',\n  'fadeOut',\n  'flipInX',\n  'flipInY',\n  'flipOutX',\n  'flipOutY',\n  'rotateIn',\n  'jackInTheBox',\n  'zoomIn',\n  'zoomOut',\n  'heartBeat',\n];\n\nconst animationCount = animations.length;\n\nconst getAnimation = () => {\n  const index = Math.floor(Math.random() * animationCount);\n  const animation = animations[index];\n  console.log(animation);\n  return animation;\n};\n\nexport default getAnimation;\n","const defaultAvatar = name => `https://ui-avatars.com/api/?name=${name}`;\n\nexport default defaultAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport getAnimation from '../../utils/animations';\nimport defaultAvatar from '../../utils/defaultAvatar';\n\n@inject('memberStore')\n@observer\nclass Main extends React.Component {\n\n  setUIAvatar = name => (e) => {\n    e.target.src = defaultAvatar(name);\n  };\n\n  render() {\n    const { memberStore } = this.props;\n    return (\n      <div className=\"main\">\n        {memberStore.members.map(m => (\n          <div className=\"member-avatar\" key={m.id}>\n            <img className={`animated infinite delay-2s ${getAnimation()}`} src={m.image} alt={m.name} onError={this.setUIAvatar(m.name)} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nMain.propTypes = {\n  memberStore: PropTypes.instanceOf(PropTypes.object),\n};\n\nexport default Main;\n","const fetchAPI = (url, data) => fetch(url, data)\n  .then(r => r.json())\n  .catch(ex => console.log(ex));\n\nconst request = (url, body, method = 'GET', needToken = false) => {\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  };\n  if (needToken) {\n    const token = localStorage.getItem('token');\n    headers.Authorization = token;\n  }\n  if (method === 'GET') {\n    return fetchAPI(url, { headers });\n  }\n  return fetchAPI(url, {\n    method,\n    headers,\n    body: JSON.stringify(body),\n  });\n};\n\nconst sendFormData = (url, body, method = 'POST') => {\n  const headers = {\n    Accept: 'application/json',\n    Authorization: localStorage.getItem('token'),\n  };\n  const data = new FormData();\n  Object.entries(body).forEach((e) => {\n    if (Array.isArray(e[1])) {\n      e[1].forEach(elem => data.append(`${e[0]}[]`, elem));\n    } else {\n      data.append(e[0], e[1]);\n    }\n  });\n  return fetchAPI(url, {\n    method,\n    headers,\n    body: data,\n  });\n};\n\nexport { request, sendFormData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport CreatableSelect from 'react-select/lib/Creatable';\nimport socket from '../../api/socket';\nimport { sendFormData } from '../../api/request';\nimport defaultAvatar from '../../utils/defaultAvatar';\n\nconst titles = [\n  'O20',\n  'O19',\n  'O18',\n  'O17',\n  'O16',\n  'O15',\n  'O14',\n  'O13',\n  'O12',\n  'O11',\n  'O10',\n  'O9',\n  'O8',\n  'O7',\n  'O6',\n  'O5',\n  'O3',\n  'O2',\n  'O1',\n  'O+',\n];\n\n@inject('memberStore')\n@observer\nclass InputMember extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = null;\n    this.name = '';\n    this.state = {\n      title: 'O18',\n      image: '',\n      attend: false,\n      payment: false,\n      imageMode: 'upload',\n    };\n  }\n\n  handleChange = (newValue, actionMeta) => {\n    if (!newValue) {\n      return;\n    }\n    if (actionMeta.action === 'create-option') {\n      this.id = Date.now().toString();\n      this.setState({\n        image: '',\n      });\n    } else {\n      this.id = newValue.value;\n      const { memberStore } = this.props;\n      const member = memberStore.members.get(this.id);\n      this.setState({\n        image: member.image,\n        payment: member.payment,\n        attend: member.attend,\n        title: member.title,\n      });\n    }\n    this.name = newValue.label;\n  };\n\n  addMember = () => {\n    const newMember = {\n      id: this.id,\n      name: this.name,\n      ...this.state,\n    };\n    console.log('new member', newMember);\n    socket.emit('add-member', newMember);\n  };\n\n  removeMember = (id) => {\n    socket.emit('remove-member', { id });\n  };\n\n  onImageSelected = async (e) => {\n    try {\n      const { files } = e.target;\n      const file = files[0];\n      const res = await sendFormData('/upload', { image: file });\n      this.setState({ image: res.image });\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  setUIAvatar = name => (e) => {\n    e.target.src = defaultAvatar(name);\n  };\n\n  changeImageMode = imageMode => () => {\n    this.setState({ imageMode });\n  };\n\n  render() {\n    const { memberStore } = this.props;\n    const members = memberStore.members.array;\n    const { countMember, countAttendMember, countPaymentMember } = memberStore;\n    const {\n      title, image, payment, attend, imageMode,\n    } = this.state;\n    const options = memberStore.members.map(m => ({ value: m.id, label: m.name }));\n    return (\n      <div className=\"container input-user\">\n        <div className=\"row\">\n          <div className=\"left col-md\">\n            <div className=\"form-group\">\n              Tên người tham dự\n              <CreatableSelect\n                isClearable\n                onChange={this.handleChange}\n                placeholder=\"Tên người tham gia\"\n                noOptionsMessagefunction=\"Chưa có ai tham gia\"\n                options={options}\n              />\n            </div>\n            <div className=\"form-group\">\n              O\n              <select\n                className=\"form-control\"\n                value={title}\n                onChange={e => this.setState({ title: e.target.value })}\n              >\n                {titles.map(t => (\n                  <option key={t} value={t}>\n                    {t}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"d-flex\">\n              <label>\n                <input\n                  type=\"radio\"\n                  checked={imageMode === 'upload'}\n                  onClick={this.changeImageMode('upload')}\n                />\n                <span className=\"mx-1\">Upload file</span>\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  checked={imageMode === 'link'}\n                  onClick={this.changeImageMode('link')}\n                />\n                <span className=\"mx-1\">Link hình</span>\n              </label>\n            </div>\n            {imageMode === 'link' ? (\n              <div className=\"form-group\">\n                Link ảnh\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Link ảnh\"\n                  value={image}\n                  onChange={e => this.setState({ image: e.target.value })}\n                />\n              </div>\n            ) : (\n              <div className=\"form-group\">\n                <label className=\"btn btn-success mt-3\">\n                  Upload hình\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    className=\"d-none\"\n                    onChange={this.onImageSelected}\n                  />\n                </label>\n              </div>\n            )}\n            <div className=\"d-flex\">\n              <label className=\"flex-fill\">\n                <input\n                  type=\"checkbox\"\n                  name=\"attend\"\n                  className=\"mr-2\"\n                  checked={attend}\n                  onChange={e => this.setState({ attend: e.target.checked })}\n                />\n                Tham gia\n              </label>\n              <label className=\"flex-fill\">\n                <input\n                  type=\"checkbox\"\n                  name=\"attend\"\n                  className=\"mr-2\"\n                  checked={payment}\n                  onChange={e => this.setState({ payment: e.target.checked })}\n                />\n                Đã đóng tiền\n              </label>\n            </div>\n            <div className=\"my-2\">\n              <button type=\"button\" className=\"btn btn-primary\" onClick={this.addMember}>\n                Thêm\n              </button>\n            </div>\n            {image ? (\n              <div className=\"input-avatar\">\n                <img src={image} alt=\"Avatar\" onError={this.setUIAvatar(this.name)} />\n              </div>\n            ) : null}\n          </div>\n          <div className=\"right col-md\">\n            <div className=\"title text-center border-bottom mb-2\">\n              Danh sách người tham dự ({countAttendMember}/{countMember}) - {countPaymentMember} đã\n              đóng tiền\n            </div>\n            <div className=\"member-list\">\n              {members.map(m => (\n                <div className=\"member\" key={m.id}>\n                  <div className=\"info\">\n                    <img\n                      className=\"avatar\"\n                      src={m.image}\n                      alt={m.name}\n                      onError={this.setUIAvatar(m.name)}\n                    />\n                    <span>{m.name}</span> - {m.title}\n                  </div>\n                  <div className=\"status\">\n                    <img\n                      className={`attend ${m.attend ? 'done' : ''}`}\n                      src=\"/images/attend.png\"\n                      alt=\"attend\"\n                    />\n                    <img\n                      className={`payment ${m.payment ? 'done' : ''}`}\n                      src=\"/images/finance.png\"\n                      alt=\"payment\"\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nInputMember.propTypes = {\n  memberStore: PropTypes.instanceOf(PropTypes.object),\n};\n\nexport default InputMember;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-animated-css';\n\nconst Person = ({ member }) => (\n  <div className=\"person\">\n    <Animated\n      isVisible={!!member}\n      animationIn=\"tada\"\n      animationOut=\"bounceOut\"\n      className=\"avatar\"\n      style={member ? { backgroundImage: `url(${member.image})` } : null}\n    />\n    <div className=\"info\">\n      <div className=\"name\">{member ? member.name : '...'}</div>\n      <div className=\"title\">{member ? member.title : ''}</div>\n    </div>\n  </div>\n);\n\n// const Person = ({ member }) => ;\n\nPerson.propTypes = {\n  member: PropTypes.instanceOf(PropTypes.object),\n};\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport Person from '../shared-components/person';\n\nconst defaultPerson = {\n  image: '/images/unknownperson.png',\n  name: 'Unknown',\n  title: '',\n  isDefault: true,\n};\n\n@inject('memberStore')\n@observer\nclass GiftExchange extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      step: 1,\n      member1: defaultPerson,\n      member2: defaultPerson,\n    };\n  }\n\n  getAPerson() {\n    const personCount = this.members.length;\n    if (!personCount) {\n      return null;\n    }\n    const random = Math.floor(Math.random() * personCount);\n    const member = this.members[random];\n    this.members.splice(random, 1);\n    return member;\n  }\n\n  getAPair() {\n    if (!this.members.length) {\n      this.setState({ step: 3 });\n    }\n    const member1 = this.getAPerson();\n    const member2 = this.getAPerson();\n    console.group('Pair');\n    console.log('member1', member1);\n    console.log('member2', member2);\n    console.groupEnd();\n    this.setState({ member1: null, member2: null });\n    setTimeout(() => {\n      this.setState({ member1, member2 });\n    }, 300);\n  }\n\n  start = () => {\n    const { memberStore } = this.props;\n    this.setState({ step: 2 });\n    const isDemo = window.location.pathname === '/random-demo';\n    this.members = toJS(memberStore.members.array).filter(m => isDemo || m.attend);\n  };\n\n  action = step => () => {\n    if (step === 1) {\n      this.start();\n    }\n    this.getAPair();\n  };\n\n  renderBtn() {\n    const { step } = this.state;\n    const text = step === 1 ? 'Bắt đầu' : step === 2 ? 'Tiếp tục' : 'Kết thúc';\n    return (\n      <button className=\"btn btn-primary start-btn\" onClick={this.action(step)}>\n        {text}\n      </button>\n    );\n  }\n\n  render() {\n    const { member1, member2, step } = this.state;\n    return (\n      <div className=\"container gift-exchange\">\n        {step < 3 ? (\n          <React.Fragment>\n            <div className=\"pair\">\n              <Person member={member1} />\n              <img\n                className=\"exchange animated swing infinite\"\n                src=\"/images/gift-exchange.png\"\n                alt=\"exchange\"\n              />\n              <Person member={member2} />\n            </div>\n            {this.renderBtn()}\n          </React.Fragment>\n        ) : null}\n        <div className=\"remain\">\n          {this.members && this.members.length}\n        </div>\n      </div>\n    );\n  }\n}\n\nGiftExchange.propTypes = {\n  memberStore: PropTypes.instanceOf(PropTypes.object),\n};\n\nexport default GiftExchange;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport Slider from 'react-slick';\nimport defaultAvatar from '../../utils/defaultAvatar';\n\nconst settings = {\n  className: 'center',\n  centerMode: true,\n  infinite: true,\n  centerPadding: '60px',\n  slidesToShow: 3,\n  slidesToScroll: 1,\n  autoplay: true,\n  autoplaySpeed: 2000,\n  cssEase: 'linear',\n};\n\n@inject('memberStore')\n@observer\nclass Welcome extends React.Component {\n  setUIAvatar = name => (e) => {\n    e.target.src = defaultAvatar(name);\n  };\n\n  render() {\n    const { memberStore } = this.props;\n    return (\n      <div className=\"welcome\">\n        <Slider {...settings}>\n          {memberStore.members.array.map(m => (\n            <div key={m.id} className=\"welcome-member\">\n              <img src={m.image} className=\"avatar\" alt=\"\" />\n              {/* <h3 className=\"name\">{m.name}</h3> */}\n            </div>\n          ))}\n        </Slider>\n      </div>\n    );\n  }\n}\nWelcome.propTypes = {\n  memberStore: PropTypes.instanceOf(PropTypes.object),\n};\n\nexport default Welcome;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport {\n  Router, Route, Switch, Redirect,\n} from 'react-router-dom';\nimport { Main, InputMember, GiftExchange, Welcome } from './components/pages';\nimport history from './utils/history';\n\nconst MyRouter = () => (\n  <Router history={history}>\n    <Switch>\n      <Route path=\"/main\" component={Main} />\n      <Route path=\"/checkin\" component={InputMember} />\n      <Route path=\"/input-member\" component={InputMember} />\n      <Route path=\"/random\" component={GiftExchange} />\n      <Route path=\"/random-demo\" component={GiftExchange} />\n      <Route path=\"/welcome\" component={Welcome} />\n      <Route path=\"/\" render={() => <Redirect to=\"/main\" />} />\n    </Switch>\n  </Router>\n);\n\nexport default MyRouter;\n","import memberStore from './members';\n\nexport default { memberStore };\n","import React from 'react';\nimport { configure } from 'mobx';\nimport { Provider } from 'mobx-react';\nimport socket from './api/socket';\nimport Router from './router';\nimport stores from './stores';\n\nconfigure({ enforceActions: 'observed' });\n\nclass App extends React.Component {\n  componentDidMount() {\n    socket.connect();\n  }\n\n  render() {\n    return (\n      <Provider {...stores}>\n        <Router />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<App />, root);\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default;\n    ReactDOM.render(<NextApp />, root);\n  });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}